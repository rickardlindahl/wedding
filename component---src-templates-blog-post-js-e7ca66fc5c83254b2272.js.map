{"version":3,"sources":["webpack:///./re/Bio.bs.js","webpack:///./src/templates/blog-post.js"],"names":["Css","require","React","wrapper","style","display","marginBottom","px","img","width","height","borderRadius","marginRight","bioText","alignItems","Styles","Bio","Props","createElement","className","alt","src","href","make","$$default","exports","str","prim","default","__esModule","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","siteDescription","excerpt","location","htmlAttributes","lang","meta","name","content","frontmatter","date","dangerouslySetInnerHTML","__html","html","Component","pageQuery"],"mappings":"2FAGA,IAAIA,EAAMC,EAAQ,QACdC,EAAQD,EAAQ,QAMpB,IAAIE,EAAUH,EAAII,MAAc,CAC1BJ,EAAIK,SAAmB,YACf,CACNL,EAAIM,aAAaN,EAAIO,GAAG,KAChB,KAIZC,EAAMR,EAAII,MAAc,CACtBJ,EAAIS,MAAMT,EAAIO,GAAG,KACT,CACNP,EAAIU,OAAOV,EAAIO,GAAG,KACV,CACNP,EAAIW,aAAaX,EAAIO,GAAG,KAChB,CACNP,EAAIY,YAAYZ,EAAIO,GAAG,KACf,OAMhBM,EAAUb,EAAII,MAAc,CAC1BJ,EAAIK,SAAmB,YACf,CACNL,EAAIc,WAAuB,UACnB,KAIZC,EAAS,CACXZ,QAASA,EACTK,IAAKA,EACLK,QAASA,GAGX,SAASG,EAAIC,GACX,OAAOf,EAAMgB,cAAc,MAAO,CACtBC,UAAWhB,GACVD,EAAMgB,cAAc,MAAO,CACxBC,UAAWX,EACXY,IAAK,aACLC,IAAK,yBACHnB,EAAMgB,cAAc,IAAK,CAC3BC,UAAWN,GACV,iFAAkFX,EAAMgB,cAAc,IAAK,CACxGI,KAAM,gCACL,sCAGvB,IAAIC,EAAOP,EAEPQ,EAAYR,EAEhBS,EAAQC,IA1DR,SAAaC,GACX,OAAOA,GA0DTF,EAAQV,OAASA,EACjBU,EAAQF,KAAOA,EACfE,EAAQD,UAAYA,EACpBC,EAAQG,QAAUJ,EAClBC,EAAQI,YAAa,G,kLC9DfC,E,gLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAC9CC,EAAkBT,EAAKU,QAE7B,OACE,kBAAC,IAAD,CAAQC,SAAUV,KAAKC,MAAMS,UAC3B,kBAAC,IAAD,CACEC,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASP,IACvCD,MAAUR,EAAKiB,YAAYT,MAAtB,MAAiCH,IAExC,4BAAKL,EAAKiB,YAAYT,OACtB,uBACEpC,MAAO,CACLC,QAAS,UAGV2B,EAAKiB,YAAYC,MAEpB,yBAAKC,wBAAyB,CAAEC,OAAQpB,EAAKqB,QAC7C,wBAAIjD,MAAO,KACX,kBAAC,IAAD,Q,GAvBuBF,IAAMoD,WA6BtBxB,YAER,IAAMyB,EAAS","file":"component---src-templates-blog-post-js-e7ca66fc5c83254b2272.js","sourcesContent":["// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Css = require(\"bs-css/src/Css.js\");\nvar React = require(\"react\");\n\nfunction str(prim) {\n  return prim;\n}\n\nvar wrapper = Css.style(/* :: */[\n      Css.display(/* flex */-1010954439),\n      /* :: */[\n        Css.marginBottom(Css.px(16)),\n        /* [] */0\n      ]\n    ]);\n\nvar img = Css.style(/* :: */[\n      Css.width(Css.px(64)),\n      /* :: */[\n        Css.height(Css.px(64)),\n        /* :: */[\n          Css.borderRadius(Css.px(32)),\n          /* :: */[\n            Css.marginRight(Css.px(12)),\n            /* [] */0\n          ]\n        ]\n      ]\n    ]);\n\nvar bioText = Css.style(/* :: */[\n      Css.display(/* flex */-1010954439),\n      /* :: */[\n        Css.alignItems(/* center */98248149),\n        /* [] */0\n      ]\n    ]);\n\nvar Styles = {\n  wrapper: wrapper,\n  img: img,\n  bioText: bioText\n};\n\nfunction Bio(Props) {\n  return React.createElement(\"div\", {\n              className: wrapper\n            }, React.createElement(\"img\", {\n                  className: img,\n                  alt: \"Ian Wilson\",\n                  src: \"/images/iwilsonq.jpg\"\n                }), React.createElement(\"p\", {\n                  className: bioText\n                }, \"Written by Ian Wilson who lives and works in Cupertino building useful things.\", React.createElement(\"a\", {\n                      href: \"https://twitter.com/iwilsonq\"\n                    }, \"You should follow him on Twitter\")));\n}\n\nvar make = Bio;\n\nvar $$default = Bio;\n\nexports.str = str;\nexports.Styles = Styles;\nexports.make = make;\nexports.$$default = $$default;\nexports.default = $$default;\nexports.__esModule = true;\n/* wrapper Not a pure module */\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../../re/Bio.bs'\nimport Layout from '../components/layout'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const siteDescription = post.excerpt\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={`${post.frontmatter.title} | ${siteTitle}`}\n        />\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            display: 'block',\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr style={{}} />\n        <Bio />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n      }\n    }\n  }\n`\n"],"sourceRoot":""}